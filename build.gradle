/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3/samples
 */
plugins {
    id 'net.researchgate.release' version '3.0.0'
    id 'java'
    id  'maven-publish'
    id 'signing'
    id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
}

//val initializeSonatypeStagingRepository by tasks.existing
subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

//    initializeSonatypeStagingRepository {
//        shouldRunAfter(tasks.withType(Sign))
//    }
//    apply plugin: 'io.github.gradle-nexus.publish-plugin'

    group = 'fr.maif'

    repositories {
        mavenCentral()
    }
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
    ext {
        scalaVersion          = "2.13"
        alpakkaKafkaVersion   = "2.0.7"
        jacksonVersion        = "2.10.5"
        akkaVersion           = "2.6.14"
        vavrVersion           = "0.10.3"
        jooqVersion           = "3.14.3"
        jooqAsyncVersion      = "1.2.2"
        functionalJsonVersion = "1.0.3"
        kafkaVersion          = "3.0.1"
    }
    test {
        testLogging {
            events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }


    publishing {
        publications {
            mavenPublication(MavenPublication) {
                from(components.java)
            }
        }
    }
//
//    signing {
//        def signingKeyId = '5B6BE1966878E3AE16B85BC975B8BA741462DEA9'
//        def signingKey = System.env.SONATYPE_USERNAME
//        def signingPassword = System.env.SONATYPE_PASSWORD
//        useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
//        sign publishing.publications.mavenJava
//    }

}


nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.env.SONATYPE_USERNAME
            password = System.env.SONATYPE_PASSWORD
        }
    }
}

release {
    tagTemplate = 'v${version}'
}
release.git.requireBranch.set('master')


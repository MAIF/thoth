buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.22.0'
    }
}

plugins {
    id 'net.researchgate.release' version '3.0.0'
    id 'java'
    id  'maven-publish'
    id 'signing'
    id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
}

//val initializeSonatypeStagingRepository by tasks.existing
subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    group = 'fr.maif'
    apply plugin: "com.vanniktech.maven.publish"

    repositories {
        mavenCentral()
    }
//
//    task sourcesJar(type: Jar) {
//        classifier = 'sources'
//        from sourceSets.main.allSource
//    }
//
//    artifacts {
//        archives sourcesJar
//    }
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
    ext {
        scalaVersion          = "2.13"
        alpakkaKafkaVersion   = "2.0.7"
        jacksonVersion        = "2.10.5"
        akkaVersion           = "2.6.14"
        vavrVersion           = "0.10.3"
        jooqVersion           = "3.17.4"
        jooqAsyncVersion      = "2.0.0-BETA4"
        functionalJsonVersion = "1.0.3"
        kafkaVersion          = "3.0.1"
        reactorKafkaVersion   = "1.3.12"
        reactorVersion        = "3.4.23"
        vertxSqlVersion       = "4.3.3"
    }
    test {
        testLogging {
            events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
        }
    }

//    tasks.named('test') {
//        useJUnitPlatform()
//    }


    publishing {
        publications {
            mavenPublication(MavenPublication) {
                from(components.java)
            }
        }
    }
}

//
//nexusPublishing {
//    repositories {
//        sonatype {
//            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
//            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
//            username = System.env.SONATYPE_USERNAME
//            password = System.env.SONATYPE_PASSWORD
//        }
//    }
//}

release {
    tagTemplate = 'v${version}'
}
release.git.requireBranch.set('master')

